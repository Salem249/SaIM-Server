'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.208
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.208.
'
Namespace localhost
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="InstMsgServSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class InstMsgServ
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private IsConnectedOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoginOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LogoutOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FriendsListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RegisterOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UnregisterOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddfriendOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteFriendOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FriendsToNotifyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SearchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConfirmAddfriendOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.SaImServer.My.MySettings.Default.SaImServer_localhost_InstMsgServ
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event IsConnectedCompleted As IsConnectedCompletedEventHandler
        
        '''<remarks/>
        Public Event LoginCompleted As LoginCompletedEventHandler
        
        '''<remarks/>
        Public Event LogoutCompleted As LogoutCompletedEventHandler
        
        '''<remarks/>
        Public Event FriendsListCompleted As FriendsListCompletedEventHandler
        
        '''<remarks/>
        Public Event RegisterCompleted As RegisterCompletedEventHandler
        
        '''<remarks/>
        Public Event UnregisterCompleted As UnregisterCompletedEventHandler
        
        '''<remarks/>
        Public Event AddfriendCompleted As AddfriendCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteFriendCompleted As DeleteFriendCompletedEventHandler
        
        '''<remarks/>
        Public Event FriendsToNotifyCompleted As FriendsToNotifyCompletedEventHandler
        
        '''<remarks/>
        Public Event SearchCompleted As SearchCompletedEventHandler
        
        '''<remarks/>
        Public Event ConfirmAddfriendCompleted As ConfirmAddfriendCompletedEventHandler
        
        '''<remarks/>
        Public Event GetStatusCompleted As GetStatusCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsConnected", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function IsConnected() As Boolean
            Dim results() As Object = Me.Invoke("IsConnected", New Object(-1) {})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub IsConnectedAsync()
            Me.IsConnectedAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub IsConnectedAsync(ByVal userState As Object)
            If (Me.IsConnectedOperationCompleted Is Nothing) Then
                Me.IsConnectedOperationCompleted = AddressOf Me.OnIsConnectedOperationCompleted
            End If
            Me.InvokeAsync("IsConnected", New Object(-1) {}, Me.IsConnectedOperationCompleted, userState)
        End Sub
        
        Private Sub OnIsConnectedOperationCompleted(ByVal arg As Object)
            If (Not (Me.IsConnectedCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent IsConnectedCompleted(Me, New IsConnectedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Login", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Login(ByVal strLoginName As String, ByVal strPassword As String) As Integer
            Dim results() As Object = Me.Invoke("Login", New Object() {strLoginName, strPassword})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoginAsync(ByVal strLoginName As String, ByVal strPassword As String)
            Me.LoginAsync(strLoginName, strPassword, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoginAsync(ByVal strLoginName As String, ByVal strPassword As String, ByVal userState As Object)
            If (Me.LoginOperationCompleted Is Nothing) Then
                Me.LoginOperationCompleted = AddressOf Me.OnLoginOperationCompleted
            End If
            Me.InvokeAsync("Login", New Object() {strLoginName, strPassword}, Me.LoginOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoginOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoginCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoginCompleted(Me, New LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Logout", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Logout(ByVal sLoginName As String) As Integer
            Dim results() As Object = Me.Invoke("Logout", New Object() {sLoginName})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LogoutAsync(ByVal sLoginName As String)
            Me.LogoutAsync(sLoginName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LogoutAsync(ByVal sLoginName As String, ByVal userState As Object)
            If (Me.LogoutOperationCompleted Is Nothing) Then
                Me.LogoutOperationCompleted = AddressOf Me.OnLogoutOperationCompleted
            End If
            Me.InvokeAsync("Logout", New Object() {sLoginName}, Me.LogoutOperationCompleted, userState)
        End Sub
        
        Private Sub OnLogoutOperationCompleted(ByVal arg As Object)
            If (Not (Me.LogoutCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LogoutCompleted(Me, New LogoutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FriendsList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FriendsList(ByVal sLoginName As String) As String()
            Dim results() As Object = Me.Invoke("FriendsList", New Object() {sLoginName})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub FriendsListAsync(ByVal sLoginName As String)
            Me.FriendsListAsync(sLoginName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FriendsListAsync(ByVal sLoginName As String, ByVal userState As Object)
            If (Me.FriendsListOperationCompleted Is Nothing) Then
                Me.FriendsListOperationCompleted = AddressOf Me.OnFriendsListOperationCompleted
            End If
            Me.InvokeAsync("FriendsList", New Object() {sLoginName}, Me.FriendsListOperationCompleted, userState)
        End Sub
        
        Private Sub OnFriendsListOperationCompleted(ByVal arg As Object)
            If (Not (Me.FriendsListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FriendsListCompleted(Me, New FriendsListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Register", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Register(ByVal sLoginName As String, ByVal sPassword As String, ByVal sAdd As String, ByVal sPhone As String, ByVal sEmail As String, ByVal sbirth_day As String, ByVal sCity As String, ByVal sProfession As String) As Integer
            Dim results() As Object = Me.Invoke("Register", New Object() {sLoginName, sPassword, sAdd, sPhone, sEmail, sbirth_day, sCity, sProfession})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RegisterAsync(ByVal sLoginName As String, ByVal sPassword As String, ByVal sAdd As String, ByVal sPhone As String, ByVal sEmail As String, ByVal sbirth_day As String, ByVal sCity As String, ByVal sProfession As String)
            Me.RegisterAsync(sLoginName, sPassword, sAdd, sPhone, sEmail, sbirth_day, sCity, sProfession, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RegisterAsync(ByVal sLoginName As String, ByVal sPassword As String, ByVal sAdd As String, ByVal sPhone As String, ByVal sEmail As String, ByVal sbirth_day As String, ByVal sCity As String, ByVal sProfession As String, ByVal userState As Object)
            If (Me.RegisterOperationCompleted Is Nothing) Then
                Me.RegisterOperationCompleted = AddressOf Me.OnRegisterOperationCompleted
            End If
            Me.InvokeAsync("Register", New Object() {sLoginName, sPassword, sAdd, sPhone, sEmail, sbirth_day, sCity, sProfession}, Me.RegisterOperationCompleted, userState)
        End Sub
        
        Private Sub OnRegisterOperationCompleted(ByVal arg As Object)
            If (Not (Me.RegisterCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RegisterCompleted(Me, New RegisterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Unregister", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Unregister(ByVal sLoginName As String) As Integer
            Dim results() As Object = Me.Invoke("Unregister", New Object() {sLoginName})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UnregisterAsync(ByVal sLoginName As String)
            Me.UnregisterAsync(sLoginName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnregisterAsync(ByVal sLoginName As String, ByVal userState As Object)
            If (Me.UnregisterOperationCompleted Is Nothing) Then
                Me.UnregisterOperationCompleted = AddressOf Me.OnUnregisterOperationCompleted
            End If
            Me.InvokeAsync("Unregister", New Object() {sLoginName}, Me.UnregisterOperationCompleted, userState)
        End Sub
        
        Private Sub OnUnregisterOperationCompleted(ByVal arg As Object)
            If (Not (Me.UnregisterCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UnregisterCompleted(Me, New UnregisterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Addfriend", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Addfriend(ByVal sLoginName As String, ByVal sFriendName As String) As String
            Dim results() As Object = Me.Invoke("Addfriend", New Object() {sLoginName, sFriendName})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddfriendAsync(ByVal sLoginName As String, ByVal sFriendName As String)
            Me.AddfriendAsync(sLoginName, sFriendName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddfriendAsync(ByVal sLoginName As String, ByVal sFriendName As String, ByVal userState As Object)
            If (Me.AddfriendOperationCompleted Is Nothing) Then
                Me.AddfriendOperationCompleted = AddressOf Me.OnAddfriendOperationCompleted
            End If
            Me.InvokeAsync("Addfriend", New Object() {sLoginName, sFriendName}, Me.AddfriendOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddfriendOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddfriendCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddfriendCompleted(Me, New AddfriendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteFriend", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteFriend(ByVal sLoginName As String, ByVal strFriend As String) As Integer
            Dim results() As Object = Me.Invoke("DeleteFriend", New Object() {sLoginName, strFriend})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteFriendAsync(ByVal sLoginName As String, ByVal strFriend As String)
            Me.DeleteFriendAsync(sLoginName, strFriend, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteFriendAsync(ByVal sLoginName As String, ByVal strFriend As String, ByVal userState As Object)
            If (Me.DeleteFriendOperationCompleted Is Nothing) Then
                Me.DeleteFriendOperationCompleted = AddressOf Me.OnDeleteFriendOperationCompleted
            End If
            Me.InvokeAsync("DeleteFriend", New Object() {sLoginName, strFriend}, Me.DeleteFriendOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteFriendOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteFriendCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteFriendCompleted(Me, New DeleteFriendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FriendsToNotify", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FriendsToNotify(ByVal sLoginName As String) As String
            Dim results() As Object = Me.Invoke("FriendsToNotify", New Object() {sLoginName})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub FriendsToNotifyAsync(ByVal sLoginName As String)
            Me.FriendsToNotifyAsync(sLoginName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FriendsToNotifyAsync(ByVal sLoginName As String, ByVal userState As Object)
            If (Me.FriendsToNotifyOperationCompleted Is Nothing) Then
                Me.FriendsToNotifyOperationCompleted = AddressOf Me.OnFriendsToNotifyOperationCompleted
            End If
            Me.InvokeAsync("FriendsToNotify", New Object() {sLoginName}, Me.FriendsToNotifyOperationCompleted, userState)
        End Sub
        
        Private Sub OnFriendsToNotifyOperationCompleted(ByVal arg As Object)
            If (Not (Me.FriendsToNotifyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FriendsToNotifyCompleted(Me, New FriendsToNotifyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Search", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Search(ByVal sLoginName As String) As String
            Dim results() As Object = Me.Invoke("Search", New Object() {sLoginName})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SearchAsync(ByVal sLoginName As String)
            Me.SearchAsync(sLoginName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SearchAsync(ByVal sLoginName As String, ByVal userState As Object)
            If (Me.SearchOperationCompleted Is Nothing) Then
                Me.SearchOperationCompleted = AddressOf Me.OnSearchOperationCompleted
            End If
            Me.InvokeAsync("Search", New Object() {sLoginName}, Me.SearchOperationCompleted, userState)
        End Sub
        
        Private Sub OnSearchOperationCompleted(ByVal arg As Object)
            If (Not (Me.SearchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SearchCompleted(Me, New SearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConfirmAddfriend", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConfirmAddfriend(ByVal sLoginName As String, ByVal sFriendName As String, ByVal sStatus As String) As Integer
            Dim results() As Object = Me.Invoke("ConfirmAddfriend", New Object() {sLoginName, sFriendName, sStatus})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConfirmAddfriendAsync(ByVal sLoginName As String, ByVal sFriendName As String, ByVal sStatus As String)
            Me.ConfirmAddfriendAsync(sLoginName, sFriendName, sStatus, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConfirmAddfriendAsync(ByVal sLoginName As String, ByVal sFriendName As String, ByVal sStatus As String, ByVal userState As Object)
            If (Me.ConfirmAddfriendOperationCompleted Is Nothing) Then
                Me.ConfirmAddfriendOperationCompleted = AddressOf Me.OnConfirmAddfriendOperationCompleted
            End If
            Me.InvokeAsync("ConfirmAddfriend", New Object() {sLoginName, sFriendName, sStatus}, Me.ConfirmAddfriendOperationCompleted, userState)
        End Sub
        
        Private Sub OnConfirmAddfriendOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConfirmAddfriendCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConfirmAddfriendCompleted(Me, New ConfirmAddfriendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStatus", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetStatus(ByVal sFriendName As String) As String
            Dim results() As Object = Me.Invoke("GetStatus", New Object() {sFriendName})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetStatusAsync(ByVal sFriendName As String)
            Me.GetStatusAsync(sFriendName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetStatusAsync(ByVal sFriendName As String, ByVal userState As Object)
            If (Me.GetStatusOperationCompleted Is Nothing) Then
                Me.GetStatusOperationCompleted = AddressOf Me.OnGetStatusOperationCompleted
            End If
            Me.InvokeAsync("GetStatus", New Object() {sFriendName}, Me.GetStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetStatusCompleted(Me, New GetStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub IsConnectedCompletedEventHandler(ByVal sender As Object, ByVal e As IsConnectedCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class IsConnectedCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub LoginCompletedEventHandler(ByVal sender As Object, ByVal e As LoginCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoginCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub LogoutCompletedEventHandler(ByVal sender As Object, ByVal e As LogoutCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LogoutCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub FriendsListCompletedEventHandler(ByVal sender As Object, ByVal e As FriendsListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FriendsListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub RegisterCompletedEventHandler(ByVal sender As Object, ByVal e As RegisterCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RegisterCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub UnregisterCompletedEventHandler(ByVal sender As Object, ByVal e As UnregisterCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UnregisterCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub AddfriendCompletedEventHandler(ByVal sender As Object, ByVal e As AddfriendCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddfriendCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub DeleteFriendCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteFriendCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteFriendCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub FriendsToNotifyCompletedEventHandler(ByVal sender As Object, ByVal e As FriendsToNotifyCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FriendsToNotifyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub SearchCompletedEventHandler(ByVal sender As Object, ByVal e As SearchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SearchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub ConfirmAddfriendCompletedEventHandler(ByVal sender As Object, ByVal e As ConfirmAddfriendCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConfirmAddfriendCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetStatusCompletedEventHandler(ByVal sender As Object, ByVal e As GetStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
